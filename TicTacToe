package tests;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Random;

public class MainTests {

	char[][] tictac = new char[3][3];
	int roundCounter = 0;
	
	public MainTests(){
		
		createGame();		
		System.out.println("You are \"X\"");
		startGame();
		
	}
	
	public void startGame(){
		
		showGame();
		playerMove();
				
	}
	
	private void playerMove() {

		System.out.println("Your move, pick a square:");
		boolean validMove = false;
		do{
			int move = ticTacInput();
			if(move == 1){
				if(tictac[0][0] == '1'){
					tictac[0][0] = 'X';
					validMove = true;
				}else{
					System.out.println("Square already taken, pick again.");
				}
			}else if (move == 2){
				if (tictac[0][1] == '2'){
					tictac[0][1] = 'X';
					validMove = true;
				} else {
					System.out.println("Square already taken, pick again.");
				}
			}else if (move == 3){
				if (tictac[0][2] == '3'){
					tictac[0][2] = 'X';
					validMove = true;
				} else {
					System.out.println("Square already taken, pick again.");
				}
			}else if (move == 4){
				if (tictac[1][0] == '4'){
					tictac[1][0] = 'X';
					validMove = true;
				} else {
					System.out.println("Square already taken, pick again.");
				}
			}else if (move == 5){
				if (tictac[1][1] == '5'){
					tictac[1][1] = 'X';
					validMove = true;
				} else {
					System.out.println("Square already taken, pick again.");
				}
			}else if (move == 6){
				if (tictac[1][2] == '6'){
					tictac[1][2] = 'X';
					validMove = true;
				} else {
					System.out.println("Square already taken, pick again.");
				}
			}else if (move == 7){
				if (tictac[2][0] == '7'){
					tictac[2][0] = 'X';
					validMove = true;
				} else {
					System.out.println("Square already taken, pick again.");
				}
			}else if (move == 8){
				if (tictac[2][1] == '8'){
					tictac[2][1] = 'X';
					validMove = true;
				} else {
					System.out.println("Square already taken, pick again.");
				}
			}else {
				if (tictac[2][2] == '9'){
					tictac[2][2] = 'X';
					validMove = true;
				} else {
					System.out.println("Square already taken, pick again.");
				}
			}
		}while(validMove == false);
		
		if(hasWinner() == true){
			showGame();
			System.out.println("Congratulations, you just won against a computer that just pick random squares..." +
								"\nNot quiet an achievment, but feel free to pat yourself on the back.");
			return;
		} else if (roundCounter == 9) {
			showGame();
			System.out.println("It's a tie. Not the one that people use around the neck. The one that means that you not only"
					+ "\nfailed at winning, but you also failed at losing.");
		} else {
			roundCounter++;
			showGame();
			cpuMove();
		}

	}

	private void cpuMove() {
		
		Random rng = new Random();
		boolean validMove = false;
		int move = 0;
				
		do{
			move = rng.nextInt(9) + 1;
			if (move == 1){
				if (tictac[0][0] == '1'){
					tictac[0][0] = 'O';
					validMove = true;
				}
			}else if (move == 2){
				if(tictac[0][1] == '2'){
					tictac[0][1] = 'O';
					validMove = true;
				}
			}else if (move == 3){
				if(tictac[0][2] == '3'){
					tictac[0][2] = 'O';
					validMove = true;
				}
			}else if (move == 4){
				if(tictac[1][0] == '4'){
					tictac[1][0] = 'O';
					validMove = true;
				}
			}else if (move == 5){
				if(tictac[1][1] == '5'){
					tictac[1][1] = 'O';
					validMove = true;
				}
			}else if (move == 6){
				if(tictac[1][2] == '6'){
					tictac[1][2] = 'O';
					validMove = true;
				}
			}else if (move == 7){
				if(tictac[2][0] == '7'){
					tictac[2][0] = 'O';
					validMove = true;
				}
			}else if (move == 8){
				if(tictac[2][1] == '8'){
					tictac[2][1] = 'O';
					validMove = true;
				}
			}else if (move == 9){
				if(tictac[2][2] == '9'){
					tictac[2][2] = 'O';
					validMove = true;
				}
			}		
		}while(validMove == false);
		System.out.print("Opponent thinking");	
		try {
			Thread.sleep(1000);
			System.out.print(".");
			Thread.sleep(1000);
			System.out.print(".");
			Thread.sleep(1000);
			System.out.println(".");
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		if (hasWinner() == true){
			showGame();
			System.out.println("You managed to lose to a computer that just pick random squares with no strategy or concept of winning..." +
								"\nWell, you can always work as a paper weight or a door stopper.");
		} else if (roundCounter == 9) {
			showGame();
			System.out.println("It's a tie. Not the one that people use around the neck. The one that means that you are not only"
					+ "\nnot a winner, but you also failed at losing.");
		} else {
			roundCounter++;
			showGame();
			playerMove();
		}
		
	}
	
	public void createGame(){	
		int counter = 1;
		for (int x = 0; x < 3; x++){
			for(int y = 0; y < 3; y++){
				tictac[x][y] = (char) (counter + 48);
				counter++;
			}
			
		}
	}
	
	public void showGame(){
		System.out.println(tictac[0][0] + "|" + tictac[0][1] + "|" + tictac[0][2]);
		System.out.println("-----");
		System.out.println(tictac[1][0] + "|" + tictac[1][1] + "|" + tictac[1][2]);
		System.out.println("-----");
		System.out.println(tictac[2][0] + "|" + tictac[2][1] + "|" + tictac[2][2] + "\n");
		
	}
	
	public boolean hasWinner(){
		if((tictac[0][0] == tictac[0][1] && tictac[0][0] == tictac[0][2]) ||
		   (tictac[0][0] == tictac[1][0] && tictac[0][0] == tictac[2][0]) ||
		   (tictac[0][0] == tictac[1][1] && tictac[0][0] == tictac[2][2]) ||
		   (tictac[0][1] == tictac[1][1] && tictac[0][1] == tictac[2][1]) ||
		   (tictac[0][2] == tictac[1][1] && tictac[0][2] == tictac[2][0]) ||
		   (tictac[0][2] == tictac[1][2] && tictac[0][2] == tictac[2][2]) ||
		   (tictac[1][0] == tictac[1][1] && tictac[1][0] == tictac[1][2]) ||
		   (tictac[2][0] == tictac[2][1] && tictac[2][0] == tictac[2][2]) ){
			return true;			
		} else {
			return false;
		}
	}
		
	public int ticTacInput() {
		 String input = "";
		 boolean validation = false;
		 int input2 = 0;
		 try {
			 BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			 
			 do{
			 input = br.readLine().trim().toUpperCase();
			 if (input.matches("[1-9]")){
				 input2 = Integer.parseInt(input);
				 validation = true;
			 } else {
				 System.out.println("Common, just pick a number from 1 to 9, is not that hard...");
			 }
			 }while (validation == false);
		 } catch (Exception e)	{}
		 return input2;
	}
	

	public static void main(String[] args) {
		
		new MainTests();
		
		
		}
}
